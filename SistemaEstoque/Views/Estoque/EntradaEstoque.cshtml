@model SistemaEstoque.Models.Classes

@{
    ViewBag.Title = "Cadastro";
}

<h1>Cadastro de Produtos</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Produto.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Produto.Codigo, new { htmlAttributes = new { @class = "form-control" } })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Pesquisar" class="btn btn-default" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Produto.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Produto.Descricao, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Produto.Referencia, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Produto.Referencia, new SelectList(new string[] {

           var context = new DBContext()
            foreach (var login in Model.DBContext.Produtos)
            {
                if (usuario == login.Usuario & senha == login.Senha)
                {
                    return true;
                    }
                }

            }), new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Produto.UnidadeMedida, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Produto.UnidadeMedida, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @*@Html.ValidationMessageFor(model => model.UnidadeMedida, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Produto.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Produto.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Produto.Valor, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Produto.Valor, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
            @*@Html.ValidationMessageFor(model => model.Valor, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Produto.DataCompra, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Produto.DataCompra, new { htmlAttributes = new { @class = "form-control" } })
            @*@Html.ValidationMessageFor(model => model.DataCompra, "", new { @class = "text-danger" })*@
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Cadastrar" class="btn btn-success" />
        </div>
    </div>
</div>
}


<div>
    @Html.ActionLink("Voltar ao Estoque", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

